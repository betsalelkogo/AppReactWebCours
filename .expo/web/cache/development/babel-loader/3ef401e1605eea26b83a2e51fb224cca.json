{"ast":null,"code":"import StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport StudentList from \"./StudentsList\";\nimport StudentDetails from \"./StudentDetails\";\nimport StudentAdd from \"./StudentAdd\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar InfoScreen = function InfoScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: _jsx(Text, {\n      children: \"Info Screen\"\n    })\n  });\n};\nvar StudentStack = createNativeStackNavigator();\nvar StudentStackCp = function StudentStackCp(_ref2) {\n  var route = _ref2.route,\n    navigation = _ref2.navigation;\n  var addNewStudents = function addNewStudents() {\n    navigation.navigate(\"StudentAdd\");\n  };\n  return _jsxs(StudentStack.Navigator, {\n    children: [_jsx(StudentStack.Screen, {\n      name: \"StudentList\",\n      component: StudentList,\n      options: {\n        headerRight: function headerRight() {\n          return _jsx(TouchableOpacity, {\n            onPress: addNewStudents,\n            children: _jsx(Ionicons, {\n              name: \"add-outline\",\n              size: 40,\n              color: \"gray\"\n            })\n          });\n        }\n      }\n    }), _jsx(StudentStack.Screen, {\n      name: \"StudentDetails\",\n      component: StudentDetails\n    }), _jsx(StudentStack.Screen, {\n      name: \"StudentAdd\",\n      component: StudentAdd\n    })]\n  });\n};\nvar Tab = createBottomTabNavigator();\nvar App = function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref3) {\n        var route = _ref3.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var focused = _ref4.focused,\n              color = _ref4.color,\n              size = _ref4.size;\n            var iconName = \"\";\n            if (route.name === \"InfoScreen\") {\n              iconName = focused ? \"information-circle\" : \"information-circle-outline\";\n            } else if (route.name === \"StudentStackCp\") {\n              iconName = focused ? \"list-circle\" : \"list-circle-outline\";\n            }\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: \"tomato\",\n          tabBarInactiveTintColor: \"gray\"\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"StudentStackCp\",\n        component: StudentStackCp,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"InfoScreen\",\n        component: InfoScreen\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: StatusBar.currentHeight,\n    flex: 1,\n    backgroundColor: \"grey\"\n  }\n});\nexport default App;","map":{"version":3,"names":["NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","Ionicons","StudentList","StudentDetails","StudentAdd","InfoScreen","route","navigation","flex","alignItems","justifyContent","StudentStack","StudentStackCp","addNewStudents","navigate","headerRight","Tab","App","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown","styles","StyleSheet","create","container","marginTop","StatusBar","currentHeight","backgroundColor"],"sources":["C:/Users/betsa/ClientsideAPP/AppReactWebCours/App.tsx"],"sourcesContent":["import { FC, useState, useEffect } from \"react\";\r\nimport {\r\n  StatusBar,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TouchableHighlight,\r\n  TouchableOpacity,\r\n  Button,\r\n  Alert,\r\n  TextInput,\r\n} from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\r\n\r\nimport StudentList from \"./StudentsList\";\r\nimport StudentDetails from \"./StudentDetails\";\r\nimport StudentAdd from \"./StudentAdd\";\r\n\r\nconst InfoScreen: FC<{ route: any; navigation: any }> = ({\r\n  route,\r\n  navigation,\r\n}) => {\r\n  return (\r\n    <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\r\n      <Text>Info Screen</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst StudentStack = createNativeStackNavigator();\r\nconst StudentStackCp: FC<{ route: any; navigation: any }> = ({\r\n  route,\r\n  navigation,\r\n}) => {\r\n  const addNewStudents = () => {\r\n    navigation.navigate(\"StudentAdd\");\r\n  };\r\n  return (\r\n    <StudentStack.Navigator>\r\n      <StudentStack.Screen\r\n        name=\"StudentList\"\r\n        component={StudentList}\r\n        options={{\r\n          headerRight: () => (\r\n            <TouchableOpacity onPress={addNewStudents}>\r\n              <Ionicons name={\"add-outline\"} size={40} color={\"gray\"} />\r\n            </TouchableOpacity>\r\n          ),\r\n        }}\r\n      />\r\n      <StudentStack.Screen name=\"StudentDetails\" component={StudentDetails} />\r\n      <StudentStack.Screen name=\"StudentAdd\" component={StudentAdd} />\r\n    </StudentStack.Navigator>\r\n  );\r\n};\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst App: FC = () => {\r\n  return (\r\n    <NavigationContainer>\r\n      <Tab.Navigator\r\n        screenOptions={({ route }) => ({\r\n          tabBarIcon: ({ focused, color, size }) => {\r\n            let iconName = \"\";\r\n            if (route.name === \"InfoScreen\") {\r\n              iconName = focused\r\n                ? \"information-circle\"\r\n                : \"information-circle-outline\";\r\n            } else if (route.name === \"StudentStackCp\") {\r\n              iconName = focused ? \"list-circle\" : \"list-circle-outline\";\r\n            }\r\n\r\n            // You can return any component that you like here!\r\n            return <Ionicons name={iconName} size={size} color={color} />;\r\n          },\r\n          tabBarActiveTintColor: \"tomato\",\r\n          tabBarInactiveTintColor: \"gray\",\r\n        })}\r\n      >\r\n        <Tab.Screen\r\n          name=\"StudentStackCp\"\r\n          component={StudentStackCp}\r\n          options={{ headerShown: false }}\r\n        />\r\n        <Tab.Screen name=\"InfoScreen\" component={InfoScreen} />\r\n      </Tab.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\n// const App: FC = () => {\r\n//   return (\r\n//     <StudentDetails></StudentDetails>\r\n//   )\r\n// };\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginTop: StatusBar.currentHeight,\r\n    flex: 1,\r\n    backgroundColor: \"grey\",\r\n  },\r\n});\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}